@page
@model IndexModel
@section Styles {
    <partial name="_DataTableStyles" />
}
@{
    ViewData["ActiveMainPage"] = "Users";
    ViewData["Title"] = Localizer["Users List"];
    ViewData["Level1"] = "Admin";
    var toolBarModel = new OracleCMS.CarStocks.Web.Models.ListingToolbarModel(Localizer["Users List"].Value);
    if ((await AuthorizationService.AuthorizeAsync(User, Permission.Users.Create)).Succeeded)
    {
        toolBarModel.Buttons.Add(new OracleCMS.CarStocks.Web.Models.Button("/Users/Add", "Admin", OracleCMS.CarStocks.Web.Models.ButtonType.Add, 1));
    }
}
<partial name="_ListingsToolbarPartial" model=@(toolBarModel) />
<div class="card">
    <div class="card-body">
        <table id="users" class="table table-hover table-bordered table-striped responsive nowrap fills-table" width="100%">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.UserModel.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UserModel.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UserModel.IsActive)
                    </th>
                    <th>
                        @Localizer["Actions"]
                    </th>
                </tr>
            </thead>
        </table>
    </div>
</div>
<a id="back-to-top" href="#" class="btn btn-primary back-to-top" role="button" aria-label="Scroll to top">
    <i class="fas fa-chevron-up"></i>
</a>
@section Scripts {
    <partial name="_DataTableScripts" />
    <script asp-add-nonce>
        $(document).ready(function () {
            var table = $('#users').DataTable({
                select: false,
                serverSide: true,
                order: [[0, 'asc']],
                dom: '@Html.Raw(OracleCMS.CarStocks.Web.WebConstants.DataTableDOMLayOut)',
                ajax:
                {
                    url: '@Url.Page("/Users/Index", new { area = "Admin", handler = "ListAll" })',
                    type: "POST",
                    headers: {
                        RequestVerificationToken:
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                },
                columns: [
                    { data: "name", name: "Name", responsivePriority: 1 },
                    { data: "email", name: "Email" },
                    {
                        data: "isActive",
                        name: "IsActive",
                        searchable: false,
                        render: function (data, type, row, meta) {
                            if (data) {
                                return '<span class="badge bg-success">@Localizer["Active"]</span>';
                            }
                            else {
                                return '<span class="badge bg-danger">@Localizer["Deactivated"]</span>';
                            }
                        },
                        className: "text-center"
                    },
                    {
                        data: null,
                        searchable: false,
                        orderable: false,
                        responsivePriority: 2,
                        width: "10%",
                        className: "text-center",
                        render: function (data, type, row, meta) {
                            var url = '@Url.Page("/Users/View", new { area = "Admin" })' + '?id=' + row.id;
                            var button = '<a href="' + url + '" class="btn btnFills btnInfoIcon" title="@Localizer["View"]"></a>';
        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Users.Edit)).Succeeded)
        {
            <text>
                                    url = '@Url.Page("/Users/Edit", new { area = "Admin" })' + '?id=' + row.id;
                                button = button + '&nbsp;<a href="' + url + '" class="btn btnFills btnEditIcon" title="@Localizer["Edit"]"></a>';
            </text>
        }
                            return button;
                        },
                    },
                    { data: "id", name: "Id", visible: false },
                ],
                buttons: [
                    'pageLength',
                ],
            });
            var debounce = new $.fn.dataTable.Debounce(table); // Add delay to search
            $.InitializeSearchKeyCookies(table);
        });
    </script>
}