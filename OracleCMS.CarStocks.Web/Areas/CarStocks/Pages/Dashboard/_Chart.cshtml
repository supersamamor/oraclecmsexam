@using Models
@model IList<ReportResultViewModel>
@{  
    var dashboardContainerClass = "row row-cols-1 row-cols-sm-1 row-cols-md-1 row-cols-lg-2 row-cols-xl-2 row-cols-xxl-2";
    if (Model.Count == 1)
    {
        dashboardContainerClass = "row row-cols-1 row-cols-sm-1 row-cols-md-1 row-cols-lg-1 row-cols-xl-1 row-cols-xxl-1";
    }
}
<input type="hidden" id="ReportListCount" value="@Model.Count" />
@if (Model != null)
{
    int counter = 0;
    foreach (var item in Model)
    {
		<input type="hidden" name="ReportList[@counter].ReportId" id="ReportList_@(counter)_ReportId" value="@item.ReportId" />
        <input type="hidden" name="ReportList[@counter].DomId" id="ReportList_@(counter)_DomId" value="@item.DomId" />
        <input type="hidden" name="ReportList[@counter].ReportName" id="ReportList_@(counter)_ReportName" value="@item.ReportName" />
        <input type="hidden" name="ReportList[@counter].ReportOrChartType" id="ReportList_@(counter)_ReportOrChartType" value="@item.ReportOrChartType" />
        <input type="hidden" name="ReportList[@counter].ColumnHeaders" id="ReportList_@(counter)_ColumnHeaders" value="@item.ColumnHeaders" />
        <input type="hidden" name="ReportList[@counter].Results" id="ReportList_@(counter)_Results" value="@item.Results" />
        <input type="hidden" name="ReportList[@counter].DisplayLegend" id="ReportList_@(counter)_DisplayLegend" value="@Html.Raw(item.DisplayLegend.ToString().ToLower())" />
        <input type="hidden" name="ReportList[@counter].IsPercentage" id="ReportList_@(counter)_IsPercentage" value="@Html.Raw(item.IsPercentage.ToString().ToLower())" />
        counter++;
    }
}
<div class="@dashboardContainerClass">
    @if (Model?.Count > 0)
    {
        int counter = 0;
        foreach (var item in Model)
        {
            <div class="col margin-top-20">
                <div class="card">
                    <h5 class="card-header text-center">
                        <span class="card-header-custom">
                            @item.ReportName
							@if (!string.IsNullOrEmpty(Configuration["OpenAI:ApiKey"]) && (await AuthorizationService.AuthorizeAsync(User, Permission.Report.AIDrivenDataAnalysisAndInsights)).Succeeded)
							{
								<button type="button" data-reportid="@item.ReportId" class="btn btn-info text-light margin-left-10 btnDataAnalyzeData" title="@Localizer["Data Analysis"]">
									<i class="fas fa-chart-bar"></i>
								</button>
							}       
                        </span><br>
                    </h5>
                    @if (item.ReportOrChartType == OracleCMS.CarStocks.Core.Constants.ReportChartType.Table)
                    {
                        <div class="card-body custom-graph-body overflow-x-scroll">
                            <table id="@item.DomId" class="table table-hover table-bordered table-striped fills-table" width="100%">
                            </table>
                        </div>
                    }
                    else if (item.ReportOrChartType == OracleCMS.CarStocks.Core.Constants.ReportChartType.Pie)
                    {
                        <div class="card-body custom-graph-body">
                            <canvas id="@item.DomId" class="pie-graph-canvas"></canvas>
                        </div>
                    }
                    else
                    {
                        <div class="card-body custom-graph-body">
                            <canvas id="@item.DomId" class="default-graph-canvas"></canvas>
                        </div>
                    }
                </div>
            </div>
            counter++;
        }
    }
    else
    {
        <div class="col">
            <div class="card">
                <h5 class="card-header text-center"><span class="card-header-custom">@Localizer["Dashboard"]</span><br></h5>
                <div class="card-body custom-graph-body text-center">
                    <br>
                    <span class="text-center">@Localizer["For your dashboard setup, please contact your System Administrator."]</span>
                    <br>
                    <br>
                    <br>
                </div>
            </div>
        </div>
    }

</div>


